Abhishek Gupta		110040067
Mridul Ravi Jain	110040083
#############################

Assignment 3(b)

This is our final submission for a Level-2 Parser.  We have implemented a complete interpreter 
(including syntactic checks and interpretation) for Level-2 grammer.

Primarily we have made changes in files(in addition to level-1 grammer): 
1) parseer.yy
2) scanner.ll 
3) ast.hh
4) ast.cc
5) local-environment.hh
6) local-environment.cc
 
Our program acceepts syntactically and semantically valid programs only. 
All the 3 flags -ast -tokens and -eval produce the required output as specified in the reference implementation.
Changes we made are as follows:


1) Added new token specifications for:
     a. FLOAT_NUMBER
     b. FLOAT
     c. DOUBLE
     d. [-+*/]
   in scanner.ll

2) Modified the Level-1 grammer to Level-2 grammar. Some of the production rules of Level-1 grammer were retained, some were modified and some new production rules were added. 

	We modified the production rules for
	 a. single_term
	 b. variable
	 c. constant
	 
	And added some additional production rules for
	 a. expression
	 b. sub_expr
	 c. data_type

3) We have added one new class(in addition to Level-1) - Arithmetic_Ast which publicy inherits Ast class and is used for Arithmetic Operations - PLUS MINUS MULT DIV UMINUS

4) We have also added another new class Eval_Result_Value_Float which publicly inherits Eval_Result_Value class and is used for storing the result of expressions in float 
		
