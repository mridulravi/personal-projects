Evaluating Program
   Global Variables (before evaluating):
   Evaluating Procedure main
      Local Variables (before evaluating):
         a : undefined
         b : undefined
         d : undefined
         i : undefined


      Basic Block: 2

         Asgn:
            LHS (Name : i)
            RHS (Num : 1)
         i : 1


         Asgn:
            LHS (Name : a)
            RHS (Num : 5)
         a : 5


         Asgn:
            LHS (Name : b)
            RHS (Num : 6)
         b : 6


         Asgn:
            LHS (Name : d)
            RHS (Num : 7)
         d : 7


      Basic Block: 3

         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         i : 2


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: PLUS
               LHS (Name : a)
               RHS (Name : b))
         d : 11


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MINUS
               LHS (Name : a)
               RHS (Name : b))
         d : -1


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: DIV
               LHS (Name : a)
               RHS (Name : b))
         d : 0


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MULT
               LHS (Name : a)
               RHS (Name : b))
         d : 30


         If_Else statement:
            Condition: LE
               LHS (Name : i)
               RHS (Num : 5)
            True Successor: 3
            False Successor: 4
         Condition True : Goto (BB 3)

      Basic Block: 3

         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         i : 3


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: PLUS
               LHS (Name : a)
               RHS (Name : b))
         d : 11


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MINUS
               LHS (Name : a)
               RHS (Name : b))
         d : -1


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: DIV
               LHS (Name : a)
               RHS (Name : b))
         d : 0


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MULT
               LHS (Name : a)
               RHS (Name : b))
         d : 30


         If_Else statement:
            Condition: LE
               LHS (Name : i)
               RHS (Num : 5)
            True Successor: 3
            False Successor: 4
         Condition True : Goto (BB 3)

      Basic Block: 3

         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         i : 4


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: PLUS
               LHS (Name : a)
               RHS (Name : b))
         d : 11


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MINUS
               LHS (Name : a)
               RHS (Name : b))
         d : -1


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: DIV
               LHS (Name : a)
               RHS (Name : b))
         d : 0


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MULT
               LHS (Name : a)
               RHS (Name : b))
         d : 30


         If_Else statement:
            Condition: LE
               LHS (Name : i)
               RHS (Num : 5)
            True Successor: 3
            False Successor: 4
         Condition True : Goto (BB 3)

      Basic Block: 3

         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         i : 5


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: PLUS
               LHS (Name : a)
               RHS (Name : b))
         d : 11


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MINUS
               LHS (Name : a)
               RHS (Name : b))
         d : -1


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: DIV
               LHS (Name : a)
               RHS (Name : b))
         d : 0


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MULT
               LHS (Name : a)
               RHS (Name : b))
         d : 30


         If_Else statement:
            Condition: LE
               LHS (Name : i)
               RHS (Num : 5)
            True Successor: 3
            False Successor: 4
         Condition True : Goto (BB 3)

      Basic Block: 3

         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         i : 6


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: PLUS
               LHS (Name : a)
               RHS (Name : b))
         d : 11


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MINUS
               LHS (Name : a)
               RHS (Name : b))
         d : -1


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: DIV
               LHS (Name : a)
               RHS (Name : b))
         d : 0


         Asgn:
            LHS (Name : d)
            RHS (
            Arith: MULT
               LHS (Name : a)
               RHS (Name : b))
         d : 30


         If_Else statement:
            Condition: LE
               LHS (Name : i)
               RHS (Num : 5)
            True Successor: 3
            False Successor: 4
         Condition False : Goto (BB 4)

      Basic Block: 4

         Return <NOTHING>


      Local Variables (after evaluating):
         a : 5
         b : 6
         d : 30
         i : 6
   Global Variables (after evaluating):
