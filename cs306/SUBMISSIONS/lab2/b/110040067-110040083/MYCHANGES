Abhishek Gupta		110040067
Mridul Ravi Jain	110040083
#############################

Assignment 2(b)

This is our final submission for a Level-1 Parser. We have implemented a complete interpreter 
(including syntactic checks and interpretation) for Level-1 grammer. 

Primarily we have made changes in files: 
1) parseer.yy
2) scanner.ll 
3) ast.hh
4) ast.cc
5) basic-block.cc
6) procedure.cc

 
Our program acceepts syntactically and semantically valid programs only. 
All the 3 flags -ast -tokens and -eval produce the required output as specified in the reference implementation.
Changes we made are as follows:

1) Added new token specifications for:
     a. if
     b. else
     c. goto
     d. basic block
     e. relational operators: LE, GE, EQ, NE, LT, GT
   in scanner.ll

2) Modified the Level-0 grammer to Level-1 grammer. Some of the production rules of Level-0 grammer
   were retained, some were modified and some new production rules were added. 

	We modified the production rules for
	 a. executable_statement_list,
	 b. assignment_statement
	 c. basic_block
	 
	And added some additional production rules for
	 a. comparison
	 b. if_goto_else_goto
	 c. goto_stmt
	 d. operator
	 e. single_term
	 f. inner_comp

   Please note that Grammer for this part(2b) is different from the grammer we implemented in part 2a. 
   The main change is in recognizing the relational operator tokens and checking for existence of target basic blocks
   
3) We have added 4 new classes - Relational_Ast, GoTo_Ast, Conditional_Ast and successor
		- All these publicy inherit Ast class
		- Relational_Ast is for relational operators
		- Conditional_Ast is for if-else statements
		- GoTo_Ast is for goto statements
		- successor class is for storing the successor of the block(in case of goto statements and goto of if-else statements)
		
4) We have also modified the evaluate function of Procedure class
		- Earlier the evaluate function used to go over all the blocks sequentially, but now since we have goto statements, therefore in case of goto stmts it should go to the explicitly mentioned block and not the block which comes next in sequential order.
		- Also throws an error if the called block(block which is pointed by goto stmt) is not present
