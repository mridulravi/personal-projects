Abhishek Gupta		110040067
Mridul Ravi Jain	110040083
#############################

Assignment 4(b)

This is our final submission for a Level-3 Parser.  We have implemented a complete interpreter 
(including syntactic checks and interpretation) for Level-3 grammer.


Primarily we have made changes in files(in addition to level4(a) grammer): 
1) parseer.yy
2) scanner.ll 
3) ast.hh
4) ast.cc
5) local-environment.hh
6) local-environment.cc
7) Procedure.hh
8) Procedure.cc
9) basic-block.cc
10) symbol-table.hh
11) symbol-table.cc
 

Our program acceepts syntactically and semantically valid programs only. 
All the 3 flags -ast -tokens and -eval produce the required output as specified in the reference implementation.
Changes we made(On level-2 grammer)  are as follows: 

1) Added new token specifications for

	a. ,		(COMMA) 
	b. void 	
	
	in scanner.ll

2) Modified the Level-2 grammer to Level-3 grammer. Some of the production rules of Level-2 grammer were retained, some were modified and some new production rules were added. 

	We modified the production rules for
	a. program
	b. assignment_statement_list
	c. single_term
	 
	And added some additional production rules for
	a. functions_declaration_list
	b. function_declaration
	c. parameters_list
	d. parameter
	e. functions_list
	f. function
	g. function_name
	h. function_body
	i. function_call_stmt
	j. function_call
	k. passed_arguments_list
	l. return_stmt
	
3) We have added one new class(in addition to Level-2) - Function_call_Ast which publicy inherits Ast class and is used for making a Function call.

4) 	In Procedure class: 	
	Added:-
		void append_local_list(Symbol_Table my_list);		
		Symbol_Table get_symbol_table();
		void set_no_of_arguments(int a);
		int get_no_of_arguments();
		Eval_Result & evaluate(Local_Environment prev_env, ostream & file_buffer, list<Ast *> l)
	Modified:-
		Eval_Result & evaluate(ostream & file_buffer);
	
5)  In symbol-table.cc
	Added:-
		list<Symbol_Table_Entry *> get_variable_table();
		int get_symbol_table_size();
	Modified:-
		void create(Local_Environment &l);
		
6)	In basic-block.cc
	Modified:-
		Eval_Result & evaluate(Local_Environment & l, ostream & file_buffer);
		
7) 	In local-environment.hh and local-environment.cc
	Added members:-
		bool is_function;
		bool stop_execution;
		
	Added member functions:-
		void set_execution_status(bool);
		bool get_execution_status();
		void set_functional(bool);
		bool get_functional();
		
	Modified:-
		void print_ast(ostream & file_buffer);
