
	.text 			# The .text assembler directive indicates
	.globl main		# The following is the code (as oppose to data)
main:				# .globl makes main know to the 
				# outside of the program.
# Prologue begins 
	sw $fp, 0($sp)		# Save the frame pointer
	sub $fp, $sp, 4		# Update the frame pointer

	sub $sp, $sp, 64		# Make space for the locals
# Prologue ends


label2:
	lw $v0, -44($fp)
	mtc1 $f2, $v0
	l.d $f4, -24($fp)
	seq $v0, $f2, $f4
	sw $v0, -44($fp)
	lw $v0, -40($fp)
	mtc1 $f2, $v0
	l.d $f4, -16($fp)
	seq $v0, $f2, $f4
	bne $v0, $zero, label3
	j label4

label3:
	li.d $f2, 1.00
	s.d $f2, -52($fp)
	j label5

label4:
	li.d $f2, 0.00
	s.d $f2, -52($fp)

label5:
	l.d $f2, -52($fp)
	s.d $f2, -24($fp)
	lw $v0, -44($fp)
	lw $t0, -40($fp)
	add $t1, $v0, $t0
	mtc1 $f2, $t1
	s.d $f2, -8($fp)
	lw $v0, -44($fp)
	li $t0, 0
	sne $t1, $v0, $t0
	bne $t1, $zero, label6
	j label8

label6:
	l.d $f2, -16($fp)
	li.d $f4, 0.00
	sne $v0, $f2, $f4
	bne $v0, $zero, label7
	j label8

label7:
	li $v0, 1
	sw $v0, -48($fp)
	j label9

label8:
	li $v0, 0
	sw $v0, -48($fp)

label9:
	lw $v0, -48($fp)
	mtc1 $f2, $v0
	s.d $f2, -16($fp)

# Epilogue Begins
	add $sp, $sp, 64
	lw $fp, 0($sp)  
	jr        $31		# Jump back to the operating system.
# Epilogue Ends

