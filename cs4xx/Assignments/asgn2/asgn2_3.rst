                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Apr  5 2014) (MINGW64)
                                      4 ; This file was generated Tue Feb 03 20:12:02 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module asgn2_3
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _findButtonPress
                                     14 	.globl _updateDisplay
                                     15 	.globl _display
                                     16 	.globl _setSegment
                                     17 	.globl _t0Delay56ms
                                     18 	.globl _t0Delay
                                     19 	.globl _CY
                                     20 	.globl _AC
                                     21 	.globl _F0
                                     22 	.globl _RS1
                                     23 	.globl _RS0
                                     24 	.globl _OV
                                     25 	.globl _FL
                                     26 	.globl _P
                                     27 	.globl _TF2
                                     28 	.globl _EXF2
                                     29 	.globl _RCLK
                                     30 	.globl _TCLK
                                     31 	.globl _EXEN2
                                     32 	.globl _TR2
                                     33 	.globl _C_T2
                                     34 	.globl _CP_RL2
                                     35 	.globl _T2CON_7
                                     36 	.globl _T2CON_6
                                     37 	.globl _T2CON_5
                                     38 	.globl _T2CON_4
                                     39 	.globl _T2CON_3
                                     40 	.globl _T2CON_2
                                     41 	.globl _T2CON_1
                                     42 	.globl _T2CON_0
                                     43 	.globl _PT2
                                     44 	.globl _PS
                                     45 	.globl _PT1
                                     46 	.globl _PX1
                                     47 	.globl _PT0
                                     48 	.globl _PX0
                                     49 	.globl _RD
                                     50 	.globl _WR
                                     51 	.globl _T1
                                     52 	.globl _T0
                                     53 	.globl _INT1
                                     54 	.globl _INT0
                                     55 	.globl _TXD
                                     56 	.globl _RXD
                                     57 	.globl _P3_7
                                     58 	.globl _P3_6
                                     59 	.globl _P3_5
                                     60 	.globl _P3_4
                                     61 	.globl _P3_3
                                     62 	.globl _P3_2
                                     63 	.globl _P3_1
                                     64 	.globl _P3_0
                                     65 	.globl _EA
                                     66 	.globl _ET2
                                     67 	.globl _ES
                                     68 	.globl _ET1
                                     69 	.globl _EX1
                                     70 	.globl _ET0
                                     71 	.globl _EX0
                                     72 	.globl _P2_7
                                     73 	.globl _P2_6
                                     74 	.globl _P2_5
                                     75 	.globl _P2_4
                                     76 	.globl _P2_3
                                     77 	.globl _P2_2
                                     78 	.globl _P2_1
                                     79 	.globl _P2_0
                                     80 	.globl _SM0
                                     81 	.globl _SM1
                                     82 	.globl _SM2
                                     83 	.globl _REN
                                     84 	.globl _TB8
                                     85 	.globl _RB8
                                     86 	.globl _TI
                                     87 	.globl _RI
                                     88 	.globl _T2EX
                                     89 	.globl _T2
                                     90 	.globl _P1_7
                                     91 	.globl _P1_6
                                     92 	.globl _P1_5
                                     93 	.globl _P1_4
                                     94 	.globl _P1_3
                                     95 	.globl _P1_2
                                     96 	.globl _P1_1
                                     97 	.globl _P1_0
                                     98 	.globl _TF1
                                     99 	.globl _TR1
                                    100 	.globl _TF0
                                    101 	.globl _TR0
                                    102 	.globl _IE1
                                    103 	.globl _IT1
                                    104 	.globl _IE0
                                    105 	.globl _IT0
                                    106 	.globl _P0_7
                                    107 	.globl _P0_6
                                    108 	.globl _P0_5
                                    109 	.globl _P0_4
                                    110 	.globl _P0_3
                                    111 	.globl _P0_2
                                    112 	.globl _P0_1
                                    113 	.globl _P0_0
                                    114 	.globl _B
                                    115 	.globl _A
                                    116 	.globl _ACC
                                    117 	.globl _PSW
                                    118 	.globl _TH2
                                    119 	.globl _TL2
                                    120 	.globl _RCAP2H
                                    121 	.globl _RCAP2L
                                    122 	.globl _T2MOD
                                    123 	.globl _T2CON
                                    124 	.globl _IP
                                    125 	.globl _P3
                                    126 	.globl _IE
                                    127 	.globl _P2
                                    128 	.globl _SBUF
                                    129 	.globl _SCON
                                    130 	.globl _P1
                                    131 	.globl _TH1
                                    132 	.globl _TH0
                                    133 	.globl _TL1
                                    134 	.globl _TL0
                                    135 	.globl _TMOD
                                    136 	.globl _TCON
                                    137 	.globl _PCON
                                    138 	.globl _DPH
                                    139 	.globl _DPL
                                    140 	.globl _SP
                                    141 	.globl _P0
                                    142 	.globl _fourth
                                    143 	.globl _third
                                    144 	.globl _second
                                    145 	.globl _first
                                    146 ;--------------------------------------------------------
                                    147 ; special function registers
                                    148 ;--------------------------------------------------------
                                    149 	.area RSEG    (ABS,DATA)
      000000                        150 	.org 0x0000
                           000080   151 G$P0$0$0 == 0x0080
                           000080   152 _P0	=	0x0080
                           000081   153 G$SP$0$0 == 0x0081
                           000081   154 _SP	=	0x0081
                           000082   155 G$DPL$0$0 == 0x0082
                           000082   156 _DPL	=	0x0082
                           000083   157 G$DPH$0$0 == 0x0083
                           000083   158 _DPH	=	0x0083
                           000087   159 G$PCON$0$0 == 0x0087
                           000087   160 _PCON	=	0x0087
                           000088   161 G$TCON$0$0 == 0x0088
                           000088   162 _TCON	=	0x0088
                           000089   163 G$TMOD$0$0 == 0x0089
                           000089   164 _TMOD	=	0x0089
                           00008A   165 G$TL0$0$0 == 0x008a
                           00008A   166 _TL0	=	0x008a
                           00008B   167 G$TL1$0$0 == 0x008b
                           00008B   168 _TL1	=	0x008b
                           00008C   169 G$TH0$0$0 == 0x008c
                           00008C   170 _TH0	=	0x008c
                           00008D   171 G$TH1$0$0 == 0x008d
                           00008D   172 _TH1	=	0x008d
                           000090   173 G$P1$0$0 == 0x0090
                           000090   174 _P1	=	0x0090
                           000098   175 G$SCON$0$0 == 0x0098
                           000098   176 _SCON	=	0x0098
                           000099   177 G$SBUF$0$0 == 0x0099
                           000099   178 _SBUF	=	0x0099
                           0000A0   179 G$P2$0$0 == 0x00a0
                           0000A0   180 _P2	=	0x00a0
                           0000A8   181 G$IE$0$0 == 0x00a8
                           0000A8   182 _IE	=	0x00a8
                           0000B0   183 G$P3$0$0 == 0x00b0
                           0000B0   184 _P3	=	0x00b0
                           0000B8   185 G$IP$0$0 == 0x00b8
                           0000B8   186 _IP	=	0x00b8
                           0000C8   187 G$T2CON$0$0 == 0x00c8
                           0000C8   188 _T2CON	=	0x00c8
                           0000C9   189 G$T2MOD$0$0 == 0x00c9
                           0000C9   190 _T2MOD	=	0x00c9
                           0000CA   191 G$RCAP2L$0$0 == 0x00ca
                           0000CA   192 _RCAP2L	=	0x00ca
                           0000CB   193 G$RCAP2H$0$0 == 0x00cb
                           0000CB   194 _RCAP2H	=	0x00cb
                           0000CC   195 G$TL2$0$0 == 0x00cc
                           0000CC   196 _TL2	=	0x00cc
                           0000CD   197 G$TH2$0$0 == 0x00cd
                           0000CD   198 _TH2	=	0x00cd
                           0000D0   199 G$PSW$0$0 == 0x00d0
                           0000D0   200 _PSW	=	0x00d0
                           0000E0   201 G$ACC$0$0 == 0x00e0
                           0000E0   202 _ACC	=	0x00e0
                           0000E0   203 G$A$0$0 == 0x00e0
                           0000E0   204 _A	=	0x00e0
                           0000F0   205 G$B$0$0 == 0x00f0
                           0000F0   206 _B	=	0x00f0
                                    207 ;--------------------------------------------------------
                                    208 ; special function bits
                                    209 ;--------------------------------------------------------
                                    210 	.area RSEG    (ABS,DATA)
      000000                        211 	.org 0x0000
                           000080   212 G$P0_0$0$0 == 0x0080
                           000080   213 _P0_0	=	0x0080
                           000081   214 G$P0_1$0$0 == 0x0081
                           000081   215 _P0_1	=	0x0081
                           000082   216 G$P0_2$0$0 == 0x0082
                           000082   217 _P0_2	=	0x0082
                           000083   218 G$P0_3$0$0 == 0x0083
                           000083   219 _P0_3	=	0x0083
                           000084   220 G$P0_4$0$0 == 0x0084
                           000084   221 _P0_4	=	0x0084
                           000085   222 G$P0_5$0$0 == 0x0085
                           000085   223 _P0_5	=	0x0085
                           000086   224 G$P0_6$0$0 == 0x0086
                           000086   225 _P0_6	=	0x0086
                           000087   226 G$P0_7$0$0 == 0x0087
                           000087   227 _P0_7	=	0x0087
                           000088   228 G$IT0$0$0 == 0x0088
                           000088   229 _IT0	=	0x0088
                           000089   230 G$IE0$0$0 == 0x0089
                           000089   231 _IE0	=	0x0089
                           00008A   232 G$IT1$0$0 == 0x008a
                           00008A   233 _IT1	=	0x008a
                           00008B   234 G$IE1$0$0 == 0x008b
                           00008B   235 _IE1	=	0x008b
                           00008C   236 G$TR0$0$0 == 0x008c
                           00008C   237 _TR0	=	0x008c
                           00008D   238 G$TF0$0$0 == 0x008d
                           00008D   239 _TF0	=	0x008d
                           00008E   240 G$TR1$0$0 == 0x008e
                           00008E   241 _TR1	=	0x008e
                           00008F   242 G$TF1$0$0 == 0x008f
                           00008F   243 _TF1	=	0x008f
                           000090   244 G$P1_0$0$0 == 0x0090
                           000090   245 _P1_0	=	0x0090
                           000091   246 G$P1_1$0$0 == 0x0091
                           000091   247 _P1_1	=	0x0091
                           000092   248 G$P1_2$0$0 == 0x0092
                           000092   249 _P1_2	=	0x0092
                           000093   250 G$P1_3$0$0 == 0x0093
                           000093   251 _P1_3	=	0x0093
                           000094   252 G$P1_4$0$0 == 0x0094
                           000094   253 _P1_4	=	0x0094
                           000095   254 G$P1_5$0$0 == 0x0095
                           000095   255 _P1_5	=	0x0095
                           000096   256 G$P1_6$0$0 == 0x0096
                           000096   257 _P1_6	=	0x0096
                           000097   258 G$P1_7$0$0 == 0x0097
                           000097   259 _P1_7	=	0x0097
                           000090   260 G$T2$0$0 == 0x0090
                           000090   261 _T2	=	0x0090
                           000091   262 G$T2EX$0$0 == 0x0091
                           000091   263 _T2EX	=	0x0091
                           000098   264 G$RI$0$0 == 0x0098
                           000098   265 _RI	=	0x0098
                           000099   266 G$TI$0$0 == 0x0099
                           000099   267 _TI	=	0x0099
                           00009A   268 G$RB8$0$0 == 0x009a
                           00009A   269 _RB8	=	0x009a
                           00009B   270 G$TB8$0$0 == 0x009b
                           00009B   271 _TB8	=	0x009b
                           00009C   272 G$REN$0$0 == 0x009c
                           00009C   273 _REN	=	0x009c
                           00009D   274 G$SM2$0$0 == 0x009d
                           00009D   275 _SM2	=	0x009d
                           00009E   276 G$SM1$0$0 == 0x009e
                           00009E   277 _SM1	=	0x009e
                           00009F   278 G$SM0$0$0 == 0x009f
                           00009F   279 _SM0	=	0x009f
                           0000A0   280 G$P2_0$0$0 == 0x00a0
                           0000A0   281 _P2_0	=	0x00a0
                           0000A1   282 G$P2_1$0$0 == 0x00a1
                           0000A1   283 _P2_1	=	0x00a1
                           0000A2   284 G$P2_2$0$0 == 0x00a2
                           0000A2   285 _P2_2	=	0x00a2
                           0000A3   286 G$P2_3$0$0 == 0x00a3
                           0000A3   287 _P2_3	=	0x00a3
                           0000A4   288 G$P2_4$0$0 == 0x00a4
                           0000A4   289 _P2_4	=	0x00a4
                           0000A5   290 G$P2_5$0$0 == 0x00a5
                           0000A5   291 _P2_5	=	0x00a5
                           0000A6   292 G$P2_6$0$0 == 0x00a6
                           0000A6   293 _P2_6	=	0x00a6
                           0000A7   294 G$P2_7$0$0 == 0x00a7
                           0000A7   295 _P2_7	=	0x00a7
                           0000A8   296 G$EX0$0$0 == 0x00a8
                           0000A8   297 _EX0	=	0x00a8
                           0000A9   298 G$ET0$0$0 == 0x00a9
                           0000A9   299 _ET0	=	0x00a9
                           0000AA   300 G$EX1$0$0 == 0x00aa
                           0000AA   301 _EX1	=	0x00aa
                           0000AB   302 G$ET1$0$0 == 0x00ab
                           0000AB   303 _ET1	=	0x00ab
                           0000AC   304 G$ES$0$0 == 0x00ac
                           0000AC   305 _ES	=	0x00ac
                           0000AD   306 G$ET2$0$0 == 0x00ad
                           0000AD   307 _ET2	=	0x00ad
                           0000AF   308 G$EA$0$0 == 0x00af
                           0000AF   309 _EA	=	0x00af
                           0000B0   310 G$P3_0$0$0 == 0x00b0
                           0000B0   311 _P3_0	=	0x00b0
                           0000B1   312 G$P3_1$0$0 == 0x00b1
                           0000B1   313 _P3_1	=	0x00b1
                           0000B2   314 G$P3_2$0$0 == 0x00b2
                           0000B2   315 _P3_2	=	0x00b2
                           0000B3   316 G$P3_3$0$0 == 0x00b3
                           0000B3   317 _P3_3	=	0x00b3
                           0000B4   318 G$P3_4$0$0 == 0x00b4
                           0000B4   319 _P3_4	=	0x00b4
                           0000B5   320 G$P3_5$0$0 == 0x00b5
                           0000B5   321 _P3_5	=	0x00b5
                           0000B6   322 G$P3_6$0$0 == 0x00b6
                           0000B6   323 _P3_6	=	0x00b6
                           0000B7   324 G$P3_7$0$0 == 0x00b7
                           0000B7   325 _P3_7	=	0x00b7
                           0000B0   326 G$RXD$0$0 == 0x00b0
                           0000B0   327 _RXD	=	0x00b0
                           0000B1   328 G$TXD$0$0 == 0x00b1
                           0000B1   329 _TXD	=	0x00b1
                           0000B2   330 G$INT0$0$0 == 0x00b2
                           0000B2   331 _INT0	=	0x00b2
                           0000B3   332 G$INT1$0$0 == 0x00b3
                           0000B3   333 _INT1	=	0x00b3
                           0000B4   334 G$T0$0$0 == 0x00b4
                           0000B4   335 _T0	=	0x00b4
                           0000B5   336 G$T1$0$0 == 0x00b5
                           0000B5   337 _T1	=	0x00b5
                           0000B6   338 G$WR$0$0 == 0x00b6
                           0000B6   339 _WR	=	0x00b6
                           0000B7   340 G$RD$0$0 == 0x00b7
                           0000B7   341 _RD	=	0x00b7
                           0000B8   342 G$PX0$0$0 == 0x00b8
                           0000B8   343 _PX0	=	0x00b8
                           0000B9   344 G$PT0$0$0 == 0x00b9
                           0000B9   345 _PT0	=	0x00b9
                           0000BA   346 G$PX1$0$0 == 0x00ba
                           0000BA   347 _PX1	=	0x00ba
                           0000BB   348 G$PT1$0$0 == 0x00bb
                           0000BB   349 _PT1	=	0x00bb
                           0000BC   350 G$PS$0$0 == 0x00bc
                           0000BC   351 _PS	=	0x00bc
                           0000BD   352 G$PT2$0$0 == 0x00bd
                           0000BD   353 _PT2	=	0x00bd
                           0000C8   354 G$T2CON_0$0$0 == 0x00c8
                           0000C8   355 _T2CON_0	=	0x00c8
                           0000C9   356 G$T2CON_1$0$0 == 0x00c9
                           0000C9   357 _T2CON_1	=	0x00c9
                           0000CA   358 G$T2CON_2$0$0 == 0x00ca
                           0000CA   359 _T2CON_2	=	0x00ca
                           0000CB   360 G$T2CON_3$0$0 == 0x00cb
                           0000CB   361 _T2CON_3	=	0x00cb
                           0000CC   362 G$T2CON_4$0$0 == 0x00cc
                           0000CC   363 _T2CON_4	=	0x00cc
                           0000CD   364 G$T2CON_5$0$0 == 0x00cd
                           0000CD   365 _T2CON_5	=	0x00cd
                           0000CE   366 G$T2CON_6$0$0 == 0x00ce
                           0000CE   367 _T2CON_6	=	0x00ce
                           0000CF   368 G$T2CON_7$0$0 == 0x00cf
                           0000CF   369 _T2CON_7	=	0x00cf
                           0000C8   370 G$CP_RL2$0$0 == 0x00c8
                           0000C8   371 _CP_RL2	=	0x00c8
                           0000C9   372 G$C_T2$0$0 == 0x00c9
                           0000C9   373 _C_T2	=	0x00c9
                           0000CA   374 G$TR2$0$0 == 0x00ca
                           0000CA   375 _TR2	=	0x00ca
                           0000CB   376 G$EXEN2$0$0 == 0x00cb
                           0000CB   377 _EXEN2	=	0x00cb
                           0000CC   378 G$TCLK$0$0 == 0x00cc
                           0000CC   379 _TCLK	=	0x00cc
                           0000CD   380 G$RCLK$0$0 == 0x00cd
                           0000CD   381 _RCLK	=	0x00cd
                           0000CE   382 G$EXF2$0$0 == 0x00ce
                           0000CE   383 _EXF2	=	0x00ce
                           0000CF   384 G$TF2$0$0 == 0x00cf
                           0000CF   385 _TF2	=	0x00cf
                           0000D0   386 G$P$0$0 == 0x00d0
                           0000D0   387 _P	=	0x00d0
                           0000D1   388 G$FL$0$0 == 0x00d1
                           0000D1   389 _FL	=	0x00d1
                           0000D2   390 G$OV$0$0 == 0x00d2
                           0000D2   391 _OV	=	0x00d2
                           0000D3   392 G$RS0$0$0 == 0x00d3
                           0000D3   393 _RS0	=	0x00d3
                           0000D4   394 G$RS1$0$0 == 0x00d4
                           0000D4   395 _RS1	=	0x00d4
                           0000D5   396 G$F0$0$0 == 0x00d5
                           0000D5   397 _F0	=	0x00d5
                           0000D6   398 G$AC$0$0 == 0x00d6
                           0000D6   399 _AC	=	0x00d6
                           0000D7   400 G$CY$0$0 == 0x00d7
                           0000D7   401 _CY	=	0x00d7
                                    402 ;--------------------------------------------------------
                                    403 ; overlayable register banks
                                    404 ;--------------------------------------------------------
                                    405 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        406 	.ds 8
                                    407 ;--------------------------------------------------------
                                    408 ; internal ram data
                                    409 ;--------------------------------------------------------
                                    410 	.area DSEG    (DATA)
                           000000   411 G$first$0$0==.
      000008                        412 _first::
      000008                        413 	.ds 2
                           000002   414 G$second$0$0==.
      00000A                        415 _second::
      00000A                        416 	.ds 2
                           000004   417 G$third$0$0==.
      00000C                        418 _third::
      00000C                        419 	.ds 2
                           000006   420 G$fourth$0$0==.
      00000E                        421 _fourth::
      00000E                        422 	.ds 2
                                    423 ;--------------------------------------------------------
                                    424 ; overlayable items in internal ram 
                                    425 ;--------------------------------------------------------
                                    426 ;--------------------------------------------------------
                                    427 ; Stack segment in internal ram 
                                    428 ;--------------------------------------------------------
                                    429 	.area	SSEG
      000010                        430 __start__stack:
      000010                        431 	.ds	1
                                    432 
                                    433 ;--------------------------------------------------------
                                    434 ; indirectly addressable internal ram data
                                    435 ;--------------------------------------------------------
                                    436 	.area ISEG    (DATA)
                                    437 ;--------------------------------------------------------
                                    438 ; absolute internal ram data
                                    439 ;--------------------------------------------------------
                                    440 	.area IABS    (ABS,DATA)
                                    441 	.area IABS    (ABS,DATA)
                                    442 ;--------------------------------------------------------
                                    443 ; bit data
                                    444 ;--------------------------------------------------------
                                    445 	.area BSEG    (BIT)
                                    446 ;--------------------------------------------------------
                                    447 ; paged external ram data
                                    448 ;--------------------------------------------------------
                                    449 	.area PSEG    (PAG,XDATA)
                                    450 ;--------------------------------------------------------
                                    451 ; external ram data
                                    452 ;--------------------------------------------------------
                                    453 	.area XSEG    (XDATA)
                                    454 ;--------------------------------------------------------
                                    455 ; absolute external ram data
                                    456 ;--------------------------------------------------------
                                    457 	.area XABS    (ABS,XDATA)
                                    458 ;--------------------------------------------------------
                                    459 ; external initialized ram data
                                    460 ;--------------------------------------------------------
                                    461 	.area XISEG   (XDATA)
                                    462 	.area HOME    (CODE)
                                    463 	.area GSINIT0 (CODE)
                                    464 	.area GSINIT1 (CODE)
                                    465 	.area GSINIT2 (CODE)
                                    466 	.area GSINIT3 (CODE)
                                    467 	.area GSINIT4 (CODE)
                                    468 	.area GSINIT5 (CODE)
                                    469 	.area GSINIT  (CODE)
                                    470 	.area GSFINAL (CODE)
                                    471 	.area CSEG    (CODE)
                                    472 ;--------------------------------------------------------
                                    473 ; interrupt vector 
                                    474 ;--------------------------------------------------------
                                    475 	.area HOME    (CODE)
      000000                        476 __interrupt_vect:
      000000 02 00 06         [24]  477 	ljmp	__sdcc_gsinit_startup
                                    478 ;--------------------------------------------------------
                                    479 ; global & static initialisations
                                    480 ;--------------------------------------------------------
                                    481 	.area HOME    (CODE)
                                    482 	.area GSINIT  (CODE)
                                    483 	.area GSFINAL (CODE)
                                    484 	.area GSINIT  (CODE)
                                    485 	.globl __sdcc_gsinit_startup
                                    486 	.globl __sdcc_program_startup
                                    487 	.globl __start__stack
                                    488 	.globl __mcs51_genXINIT
                                    489 	.globl __mcs51_genXRAMCLEAR
                                    490 	.globl __mcs51_genRAMCLEAR
                           000000   491 	C$asgn2_3.c$4$1$45 ==.
                                    492 ;	asgn2_3.c:4: int first=1,second=2,third=3,fourth=4;
      00005F 75 08 01         [24]  493 	mov	_first,#0x01
      000062 75 09 00         [24]  494 	mov	(_first + 1),#0x00
                           000006   495 	C$asgn2_3.c$4$1$45 ==.
                                    496 ;	asgn2_3.c:4: 
      000065 75 0A 02         [24]  497 	mov	_second,#0x02
      000068 75 0B 00         [24]  498 	mov	(_second + 1),#0x00
                           00000C   499 	C$asgn2_3.c$4$1$45 ==.
                                    500 ;	asgn2_3.c:4: int first=1,second=2,third=3,fourth=4;
      00006B 75 0C 03         [24]  501 	mov	_third,#0x03
      00006E 75 0D 00         [24]  502 	mov	(_third + 1),#0x00
                           000012   503 	C$asgn2_3.c$4$1$45 ==.
                                    504 ;	asgn2_3.c:4: 
      000071 75 0E 04         [24]  505 	mov	_fourth,#0x04
      000074 75 0F 00         [24]  506 	mov	(_fourth + 1),#0x00
                                    507 	.area GSFINAL (CODE)
      000077 02 00 03         [24]  508 	ljmp	__sdcc_program_startup
                                    509 ;--------------------------------------------------------
                                    510 ; Home
                                    511 ;--------------------------------------------------------
                                    512 	.area HOME    (CODE)
                                    513 	.area HOME    (CODE)
      000003                        514 __sdcc_program_startup:
      000003 02 03 79         [24]  515 	ljmp	_main
                                    516 ;	return from main will return to caller
                                    517 ;--------------------------------------------------------
                                    518 ; code
                                    519 ;--------------------------------------------------------
                                    520 	.area CSEG    (CODE)
                                    521 ;------------------------------------------------------------
                                    522 ;Allocation info for local variables in function 't0Delay'
                                    523 ;------------------------------------------------------------
                           000000   524 	G$t0Delay$0$0 ==.
                           000000   525 	C$asgn2_3.c$7$0$0 ==.
                                    526 ;	asgn2_3.c:7: void t0Delay()
                                    527 ;	-----------------------------------------
                                    528 ;	 function t0Delay
                                    529 ;	-----------------------------------------
      00007A                        530 _t0Delay:
                           000007   531 	ar7 = 0x07
                           000006   532 	ar6 = 0x06
                           000005   533 	ar5 = 0x05
                           000004   534 	ar4 = 0x04
                           000003   535 	ar3 = 0x03
                           000002   536 	ar2 = 0x02
                           000001   537 	ar1 = 0x01
                           000000   538 	ar0 = 0x00
                           000000   539 	C$asgn2_3.c$9$1$1 ==.
                                    540 ;	asgn2_3.c:9: TMOD=0x01;
      00007A 75 89 01         [24]  541 	mov	_TMOD,#0x01
                           000003   542 	C$asgn2_3.c$10$1$1 ==.
                                    543 ;	asgn2_3.c:10: TL0=0x00;
      00007D 75 8A 00         [24]  544 	mov	_TL0,#0x00
                           000006   545 	C$asgn2_3.c$11$1$1 ==.
                                    546 ;	asgn2_3.c:11: TH0=0xF5;
      000080 75 8C F5         [24]  547 	mov	_TH0,#0xF5
                           000009   548 	C$asgn2_3.c$12$1$1 ==.
                                    549 ;	asgn2_3.c:12: TR0=1;
      000083 D2 8C            [12]  550 	setb	_TR0
                           00000B   551 	C$asgn2_3.c$13$1$1 ==.
                                    552 ;	asgn2_3.c:13: while(	TF0==0 );
      000085                        553 00101$:
      000085 30 8D FD         [24]  554 	jnb	_TF0,00101$
                           00000E   555 	C$asgn2_3.c$14$1$1 ==.
                                    556 ;	asgn2_3.c:14: TR0=0;
      000088 C2 8C            [12]  557 	clr	_TR0
                           000010   558 	C$asgn2_3.c$15$1$1 ==.
                                    559 ;	asgn2_3.c:15: TF0=0;
      00008A C2 8D            [12]  560 	clr	_TF0
                           000012   561 	C$asgn2_3.c$16$1$1 ==.
                           000012   562 	XG$t0Delay$0$0 ==.
      00008C 22               [24]  563 	ret
                                    564 ;------------------------------------------------------------
                                    565 ;Allocation info for local variables in function 't0Delay56ms'
                                    566 ;------------------------------------------------------------
                           000013   567 	G$t0Delay56ms$0$0 ==.
                           000013   568 	C$asgn2_3.c$19$1$1 ==.
                                    569 ;	asgn2_3.c:19: void t0Delay56ms(void)
                                    570 ;	-----------------------------------------
                                    571 ;	 function t0Delay56ms
                                    572 ;	-----------------------------------------
      00008D                        573 _t0Delay56ms:
                           000013   574 	C$asgn2_3.c$21$1$3 ==.
                                    575 ;	asgn2_3.c:21: TMOD=0x01;
      00008D 75 89 01         [24]  576 	mov	_TMOD,#0x01
                           000016   577 	C$asgn2_3.c$22$1$3 ==.
                                    578 ;	asgn2_3.c:22: TL0=0x00;
      000090 75 8A 00         [24]  579 	mov	_TL0,#0x00
                           000019   580 	C$asgn2_3.c$23$1$3 ==.
                                    581 ;	asgn2_3.c:23: TH0=0x35;
      000093 75 8C 35         [24]  582 	mov	_TH0,#0x35
                           00001C   583 	C$asgn2_3.c$24$1$3 ==.
                                    584 ;	asgn2_3.c:24: TR0=1;
      000096 D2 8C            [12]  585 	setb	_TR0
                           00001E   586 	C$asgn2_3.c$25$1$3 ==.
                                    587 ;	asgn2_3.c:25: while(	TF0==0 );
      000098                        588 00101$:
      000098 30 8D FD         [24]  589 	jnb	_TF0,00101$
                           000021   590 	C$asgn2_3.c$26$1$3 ==.
                                    591 ;	asgn2_3.c:26: TR0=0;
      00009B C2 8C            [12]  592 	clr	_TR0
                           000023   593 	C$asgn2_3.c$27$1$3 ==.
                                    594 ;	asgn2_3.c:27: TF0=0;	
      00009D C2 8D            [12]  595 	clr	_TF0
                           000025   596 	C$asgn2_3.c$28$1$3 ==.
                           000025   597 	XG$t0Delay56ms$0$0 ==.
      00009F 22               [24]  598 	ret
                                    599 ;------------------------------------------------------------
                                    600 ;Allocation info for local variables in function 'setSegment'
                                    601 ;------------------------------------------------------------
                                    602 ;x                         Allocated to registers r6 r7 
                                    603 ;------------------------------------------------------------
                           000026   604 	G$setSegment$0$0 ==.
                           000026   605 	C$asgn2_3.c$32$1$3 ==.
                                    606 ;	asgn2_3.c:32: void setSegment(int x)
                                    607 ;	-----------------------------------------
                                    608 ;	 function setSegment
                                    609 ;	-----------------------------------------
      0000A0                        610 _setSegment:
      0000A0 AE 82            [24]  611 	mov	r6,dpl
      0000A2 AF 83            [24]  612 	mov	r7,dph
                           00002A   613 	C$asgn2_3.c$34$1$5 ==.
                                    614 ;	asgn2_3.c:34: if(x==0)
      0000A4 EE               [12]  615 	mov	a,r6
      0000A5 4F               [12]  616 	orl	a,r7
      0000A6 70 11            [24]  617 	jnz	00146$
                           00002E   618 	C$asgn2_3.c$36$2$6 ==.
                                    619 ;	asgn2_3.c:36: P0_0=0;
      0000A8 C2 80            [12]  620 	clr	_P0_0
                           000030   621 	C$asgn2_3.c$37$2$6 ==.
                                    622 ;	asgn2_3.c:37: P0_1=0;
      0000AA C2 81            [12]  623 	clr	_P0_1
                           000032   624 	C$asgn2_3.c$38$2$6 ==.
                                    625 ;	asgn2_3.c:38: P0_2=0;
      0000AC C2 82            [12]  626 	clr	_P0_2
                           000034   627 	C$asgn2_3.c$39$2$6 ==.
                                    628 ;	asgn2_3.c:39: P0_3=0;
      0000AE C2 83            [12]  629 	clr	_P0_3
                           000036   630 	C$asgn2_3.c$40$2$6 ==.
                                    631 ;	asgn2_3.c:40: P0_4=0;
      0000B0 C2 84            [12]  632 	clr	_P0_4
                           000038   633 	C$asgn2_3.c$41$2$6 ==.
                                    634 ;	asgn2_3.c:41: P0_5=0;
      0000B2 C2 85            [12]  635 	clr	_P0_5
                           00003A   636 	C$asgn2_3.c$42$2$6 ==.
                                    637 ;	asgn2_3.c:42: P0_6=1;
      0000B4 D2 86            [12]  638 	setb	_P0_6
      0000B6 02 02 0B         [24]  639 	ljmp	00148$
      0000B9                        640 00146$:
                           00003F   641 	C$asgn2_3.c$44$1$5 ==.
                                    642 ;	asgn2_3.c:44: else if(x==1)
      0000B9 BE 01 14         [24]  643 	cjne	r6,#0x01,00143$
      0000BC BF 00 11         [24]  644 	cjne	r7,#0x00,00143$
                           000045   645 	C$asgn2_3.c$46$2$7 ==.
                                    646 ;	asgn2_3.c:46: P0_0=1;
      0000BF D2 80            [12]  647 	setb	_P0_0
                           000047   648 	C$asgn2_3.c$47$2$7 ==.
                                    649 ;	asgn2_3.c:47: P0_1=0;
      0000C1 C2 81            [12]  650 	clr	_P0_1
                           000049   651 	C$asgn2_3.c$48$2$7 ==.
                                    652 ;	asgn2_3.c:48: P0_2=0;
      0000C3 C2 82            [12]  653 	clr	_P0_2
                           00004B   654 	C$asgn2_3.c$49$2$7 ==.
                                    655 ;	asgn2_3.c:49: P0_3=1;
      0000C5 D2 83            [12]  656 	setb	_P0_3
                           00004D   657 	C$asgn2_3.c$50$2$7 ==.
                                    658 ;	asgn2_3.c:50: P0_4=1;
      0000C7 D2 84            [12]  659 	setb	_P0_4
                           00004F   660 	C$asgn2_3.c$51$2$7 ==.
                                    661 ;	asgn2_3.c:51: P0_5=1;
      0000C9 D2 85            [12]  662 	setb	_P0_5
                           000051   663 	C$asgn2_3.c$52$2$7 ==.
                                    664 ;	asgn2_3.c:52: P0_6=1;
      0000CB D2 86            [12]  665 	setb	_P0_6
      0000CD 02 02 0B         [24]  666 	ljmp	00148$
      0000D0                        667 00143$:
                           000056   668 	C$asgn2_3.c$54$1$5 ==.
                                    669 ;	asgn2_3.c:54: else if(x==2)
      0000D0 BE 02 14         [24]  670 	cjne	r6,#0x02,00140$
      0000D3 BF 00 11         [24]  671 	cjne	r7,#0x00,00140$
                           00005C   672 	C$asgn2_3.c$56$2$8 ==.
                                    673 ;	asgn2_3.c:56: P0_0=0;
      0000D6 C2 80            [12]  674 	clr	_P0_0
                           00005E   675 	C$asgn2_3.c$57$2$8 ==.
                                    676 ;	asgn2_3.c:57: P0_1=0;
      0000D8 C2 81            [12]  677 	clr	_P0_1
                           000060   678 	C$asgn2_3.c$58$2$8 ==.
                                    679 ;	asgn2_3.c:58: P0_2=1;
      0000DA D2 82            [12]  680 	setb	_P0_2
                           000062   681 	C$asgn2_3.c$59$2$8 ==.
                                    682 ;	asgn2_3.c:59: P0_3=0;
      0000DC C2 83            [12]  683 	clr	_P0_3
                           000064   684 	C$asgn2_3.c$60$2$8 ==.
                                    685 ;	asgn2_3.c:60: P0_4=0;
      0000DE C2 84            [12]  686 	clr	_P0_4
                           000066   687 	C$asgn2_3.c$61$2$8 ==.
                                    688 ;	asgn2_3.c:61: P0_5=1;
      0000E0 D2 85            [12]  689 	setb	_P0_5
                           000068   690 	C$asgn2_3.c$62$2$8 ==.
                                    691 ;	asgn2_3.c:62: P0_6=0;
      0000E2 C2 86            [12]  692 	clr	_P0_6
      0000E4 02 02 0B         [24]  693 	ljmp	00148$
      0000E7                        694 00140$:
                           00006D   695 	C$asgn2_3.c$64$1$5 ==.
                                    696 ;	asgn2_3.c:64: else if(x==3)
      0000E7 BE 03 14         [24]  697 	cjne	r6,#0x03,00137$
      0000EA BF 00 11         [24]  698 	cjne	r7,#0x00,00137$
                           000073   699 	C$asgn2_3.c$66$2$9 ==.
                                    700 ;	asgn2_3.c:66: P0_0=0;
      0000ED C2 80            [12]  701 	clr	_P0_0
                           000075   702 	C$asgn2_3.c$67$2$9 ==.
                                    703 ;	asgn2_3.c:67: P0_1=0;
      0000EF C2 81            [12]  704 	clr	_P0_1
                           000077   705 	C$asgn2_3.c$68$2$9 ==.
                                    706 ;	asgn2_3.c:68: P0_2=0;
      0000F1 C2 82            [12]  707 	clr	_P0_2
                           000079   708 	C$asgn2_3.c$69$2$9 ==.
                                    709 ;	asgn2_3.c:69: P0_3=0;
      0000F3 C2 83            [12]  710 	clr	_P0_3
                           00007B   711 	C$asgn2_3.c$70$2$9 ==.
                                    712 ;	asgn2_3.c:70: P0_4=1;
      0000F5 D2 84            [12]  713 	setb	_P0_4
                           00007D   714 	C$asgn2_3.c$71$2$9 ==.
                                    715 ;	asgn2_3.c:71: P0_5=1;
      0000F7 D2 85            [12]  716 	setb	_P0_5
                           00007F   717 	C$asgn2_3.c$72$2$9 ==.
                                    718 ;	asgn2_3.c:72: P0_6=0;
      0000F9 C2 86            [12]  719 	clr	_P0_6
      0000FB 02 02 0B         [24]  720 	ljmp	00148$
      0000FE                        721 00137$:
                           000084   722 	C$asgn2_3.c$74$1$5 ==.
                                    723 ;	asgn2_3.c:74: else if(x==4)
      0000FE BE 04 14         [24]  724 	cjne	r6,#0x04,00134$
      000101 BF 00 11         [24]  725 	cjne	r7,#0x00,00134$
                           00008A   726 	C$asgn2_3.c$76$2$10 ==.
                                    727 ;	asgn2_3.c:76: P0_0=1;
      000104 D2 80            [12]  728 	setb	_P0_0
                           00008C   729 	C$asgn2_3.c$77$2$10 ==.
                                    730 ;	asgn2_3.c:77: P0_1=0;
      000106 C2 81            [12]  731 	clr	_P0_1
                           00008E   732 	C$asgn2_3.c$78$2$10 ==.
                                    733 ;	asgn2_3.c:78: P0_2=0;
      000108 C2 82            [12]  734 	clr	_P0_2
                           000090   735 	C$asgn2_3.c$79$2$10 ==.
                                    736 ;	asgn2_3.c:79: P0_3=1;
      00010A D2 83            [12]  737 	setb	_P0_3
                           000092   738 	C$asgn2_3.c$80$2$10 ==.
                                    739 ;	asgn2_3.c:80: P0_4=1;
      00010C D2 84            [12]  740 	setb	_P0_4
                           000094   741 	C$asgn2_3.c$81$2$10 ==.
                                    742 ;	asgn2_3.c:81: P0_5=0;
      00010E C2 85            [12]  743 	clr	_P0_5
                           000096   744 	C$asgn2_3.c$82$2$10 ==.
                                    745 ;	asgn2_3.c:82: P0_6=0;
      000110 C2 86            [12]  746 	clr	_P0_6
      000112 02 02 0B         [24]  747 	ljmp	00148$
      000115                        748 00134$:
                           00009B   749 	C$asgn2_3.c$84$1$5 ==.
                                    750 ;	asgn2_3.c:84: else if(x==5)
      000115 BE 05 14         [24]  751 	cjne	r6,#0x05,00131$
      000118 BF 00 11         [24]  752 	cjne	r7,#0x00,00131$
                           0000A1   753 	C$asgn2_3.c$86$2$11 ==.
                                    754 ;	asgn2_3.c:86: P0_0=0;
      00011B C2 80            [12]  755 	clr	_P0_0
                           0000A3   756 	C$asgn2_3.c$87$2$11 ==.
                                    757 ;	asgn2_3.c:87: P0_1=1;
      00011D D2 81            [12]  758 	setb	_P0_1
                           0000A5   759 	C$asgn2_3.c$88$2$11 ==.
                                    760 ;	asgn2_3.c:88: P0_2=0;
      00011F C2 82            [12]  761 	clr	_P0_2
                           0000A7   762 	C$asgn2_3.c$89$2$11 ==.
                                    763 ;	asgn2_3.c:89: P0_3=0;
      000121 C2 83            [12]  764 	clr	_P0_3
                           0000A9   765 	C$asgn2_3.c$90$2$11 ==.
                                    766 ;	asgn2_3.c:90: P0_4=1;
      000123 D2 84            [12]  767 	setb	_P0_4
                           0000AB   768 	C$asgn2_3.c$91$2$11 ==.
                                    769 ;	asgn2_3.c:91: P0_5=0;
      000125 C2 85            [12]  770 	clr	_P0_5
                           0000AD   771 	C$asgn2_3.c$92$2$11 ==.
                                    772 ;	asgn2_3.c:92: P0_6=0;
      000127 C2 86            [12]  773 	clr	_P0_6
      000129 02 02 0B         [24]  774 	ljmp	00148$
      00012C                        775 00131$:
                           0000B2   776 	C$asgn2_3.c$94$1$5 ==.
                                    777 ;	asgn2_3.c:94: else if(x==6)
      00012C BE 06 14         [24]  778 	cjne	r6,#0x06,00128$
      00012F BF 00 11         [24]  779 	cjne	r7,#0x00,00128$
                           0000B8   780 	C$asgn2_3.c$96$2$12 ==.
                                    781 ;	asgn2_3.c:96: P0_0=0;
      000132 C2 80            [12]  782 	clr	_P0_0
                           0000BA   783 	C$asgn2_3.c$97$2$12 ==.
                                    784 ;	asgn2_3.c:97: P0_1=1;
      000134 D2 81            [12]  785 	setb	_P0_1
                           0000BC   786 	C$asgn2_3.c$98$2$12 ==.
                                    787 ;	asgn2_3.c:98: P0_2=0;
      000136 C2 82            [12]  788 	clr	_P0_2
                           0000BE   789 	C$asgn2_3.c$99$2$12 ==.
                                    790 ;	asgn2_3.c:99: P0_3=0;
      000138 C2 83            [12]  791 	clr	_P0_3
                           0000C0   792 	C$asgn2_3.c$100$2$12 ==.
                                    793 ;	asgn2_3.c:100: P0_4=0;
      00013A C2 84            [12]  794 	clr	_P0_4
                           0000C2   795 	C$asgn2_3.c$101$2$12 ==.
                                    796 ;	asgn2_3.c:101: P0_5=0;
      00013C C2 85            [12]  797 	clr	_P0_5
                           0000C4   798 	C$asgn2_3.c$102$2$12 ==.
                                    799 ;	asgn2_3.c:102: P0_6=0;
      00013E C2 86            [12]  800 	clr	_P0_6
      000140 02 02 0B         [24]  801 	ljmp	00148$
      000143                        802 00128$:
                           0000C9   803 	C$asgn2_3.c$104$1$5 ==.
                                    804 ;	asgn2_3.c:104: else if(x==7)
      000143 BE 07 14         [24]  805 	cjne	r6,#0x07,00125$
      000146 BF 00 11         [24]  806 	cjne	r7,#0x00,00125$
                           0000CF   807 	C$asgn2_3.c$106$2$13 ==.
                                    808 ;	asgn2_3.c:106: P0_0=0;
      000149 C2 80            [12]  809 	clr	_P0_0
                           0000D1   810 	C$asgn2_3.c$107$2$13 ==.
                                    811 ;	asgn2_3.c:107: P0_1=0;
      00014B C2 81            [12]  812 	clr	_P0_1
                           0000D3   813 	C$asgn2_3.c$108$2$13 ==.
                                    814 ;	asgn2_3.c:108: P0_2=0;
      00014D C2 82            [12]  815 	clr	_P0_2
                           0000D5   816 	C$asgn2_3.c$109$2$13 ==.
                                    817 ;	asgn2_3.c:109: P0_3=1;
      00014F D2 83            [12]  818 	setb	_P0_3
                           0000D7   819 	C$asgn2_3.c$110$2$13 ==.
                                    820 ;	asgn2_3.c:110: P0_4=1;
      000151 D2 84            [12]  821 	setb	_P0_4
                           0000D9   822 	C$asgn2_3.c$111$2$13 ==.
                                    823 ;	asgn2_3.c:111: P0_5=1;
      000153 D2 85            [12]  824 	setb	_P0_5
                           0000DB   825 	C$asgn2_3.c$112$2$13 ==.
                                    826 ;	asgn2_3.c:112: P0_6=1;
      000155 D2 86            [12]  827 	setb	_P0_6
      000157 02 02 0B         [24]  828 	ljmp	00148$
      00015A                        829 00125$:
                           0000E0   830 	C$asgn2_3.c$114$1$5 ==.
                                    831 ;	asgn2_3.c:114: else if(x==8)
      00015A BE 08 14         [24]  832 	cjne	r6,#0x08,00122$
      00015D BF 00 11         [24]  833 	cjne	r7,#0x00,00122$
                           0000E6   834 	C$asgn2_3.c$116$2$14 ==.
                                    835 ;	asgn2_3.c:116: P0_0=0;
      000160 C2 80            [12]  836 	clr	_P0_0
                           0000E8   837 	C$asgn2_3.c$117$2$14 ==.
                                    838 ;	asgn2_3.c:117: P0_1=0;
      000162 C2 81            [12]  839 	clr	_P0_1
                           0000EA   840 	C$asgn2_3.c$118$2$14 ==.
                                    841 ;	asgn2_3.c:118: P0_2=0;
      000164 C2 82            [12]  842 	clr	_P0_2
                           0000EC   843 	C$asgn2_3.c$119$2$14 ==.
                                    844 ;	asgn2_3.c:119: P0_3=0;
      000166 C2 83            [12]  845 	clr	_P0_3
                           0000EE   846 	C$asgn2_3.c$120$2$14 ==.
                                    847 ;	asgn2_3.c:120: P0_4=0;
      000168 C2 84            [12]  848 	clr	_P0_4
                           0000F0   849 	C$asgn2_3.c$121$2$14 ==.
                                    850 ;	asgn2_3.c:121: P0_5=0;
      00016A C2 85            [12]  851 	clr	_P0_5
                           0000F2   852 	C$asgn2_3.c$122$2$14 ==.
                                    853 ;	asgn2_3.c:122: P0_6=0;
      00016C C2 86            [12]  854 	clr	_P0_6
      00016E 02 02 0B         [24]  855 	ljmp	00148$
      000171                        856 00122$:
                           0000F7   857 	C$asgn2_3.c$124$1$5 ==.
                                    858 ;	asgn2_3.c:124: else if(x==9)
      000171 BE 09 14         [24]  859 	cjne	r6,#0x09,00119$
      000174 BF 00 11         [24]  860 	cjne	r7,#0x00,00119$
                           0000FD   861 	C$asgn2_3.c$126$2$15 ==.
                                    862 ;	asgn2_3.c:126: P0_0=0;
      000177 C2 80            [12]  863 	clr	_P0_0
                           0000FF   864 	C$asgn2_3.c$127$2$15 ==.
                                    865 ;	asgn2_3.c:127: P0_1=0;
      000179 C2 81            [12]  866 	clr	_P0_1
                           000101   867 	C$asgn2_3.c$128$2$15 ==.
                                    868 ;	asgn2_3.c:128: P0_2=0;
      00017B C2 82            [12]  869 	clr	_P0_2
                           000103   870 	C$asgn2_3.c$129$2$15 ==.
                                    871 ;	asgn2_3.c:129: P0_3=0;
      00017D C2 83            [12]  872 	clr	_P0_3
                           000105   873 	C$asgn2_3.c$130$2$15 ==.
                                    874 ;	asgn2_3.c:130: P0_4=1;
      00017F D2 84            [12]  875 	setb	_P0_4
                           000107   876 	C$asgn2_3.c$131$2$15 ==.
                                    877 ;	asgn2_3.c:131: P0_5=0;
      000181 C2 85            [12]  878 	clr	_P0_5
                           000109   879 	C$asgn2_3.c$132$2$15 ==.
                                    880 ;	asgn2_3.c:132: P0_6=0;
      000183 C2 86            [12]  881 	clr	_P0_6
      000185 02 02 0B         [24]  882 	ljmp	00148$
      000188                        883 00119$:
                           00010E   884 	C$asgn2_3.c$134$1$5 ==.
                                    885 ;	asgn2_3.c:134: else if(x==10)//A
      000188 BE 0A 14         [24]  886 	cjne	r6,#0x0A,00116$
      00018B BF 00 11         [24]  887 	cjne	r7,#0x00,00116$
                           000114   888 	C$asgn2_3.c$136$2$16 ==.
                                    889 ;	asgn2_3.c:136: P0_0=0;
      00018E C2 80            [12]  890 	clr	_P0_0
                           000116   891 	C$asgn2_3.c$137$2$16 ==.
                                    892 ;	asgn2_3.c:137: P0_1=0;
      000190 C2 81            [12]  893 	clr	_P0_1
                           000118   894 	C$asgn2_3.c$138$2$16 ==.
                                    895 ;	asgn2_3.c:138: P0_2=0;
      000192 C2 82            [12]  896 	clr	_P0_2
                           00011A   897 	C$asgn2_3.c$139$2$16 ==.
                                    898 ;	asgn2_3.c:139: P0_3=1;
      000194 D2 83            [12]  899 	setb	_P0_3
                           00011C   900 	C$asgn2_3.c$140$2$16 ==.
                                    901 ;	asgn2_3.c:140: P0_4=0;
      000196 C2 84            [12]  902 	clr	_P0_4
                           00011E   903 	C$asgn2_3.c$141$2$16 ==.
                                    904 ;	asgn2_3.c:141: P0_5=0;
      000198 C2 85            [12]  905 	clr	_P0_5
                           000120   906 	C$asgn2_3.c$142$2$16 ==.
                                    907 ;	asgn2_3.c:142: P0_6=0;
      00019A C2 86            [12]  908 	clr	_P0_6
      00019C 02 02 0B         [24]  909 	ljmp	00148$
      00019F                        910 00116$:
                           000125   911 	C$asgn2_3.c$144$1$5 ==.
                                    912 ;	asgn2_3.c:144: else if(x==11)//B
      00019F BE 0B 13         [24]  913 	cjne	r6,#0x0B,00113$
      0001A2 BF 00 10         [24]  914 	cjne	r7,#0x00,00113$
                           00012B   915 	C$asgn2_3.c$146$2$17 ==.
                                    916 ;	asgn2_3.c:146: P0_0=0;
      0001A5 C2 80            [12]  917 	clr	_P0_0
                           00012D   918 	C$asgn2_3.c$147$2$17 ==.
                                    919 ;	asgn2_3.c:147: P0_1=0;
      0001A7 C2 81            [12]  920 	clr	_P0_1
                           00012F   921 	C$asgn2_3.c$148$2$17 ==.
                                    922 ;	asgn2_3.c:148: P0_2=0;
      0001A9 C2 82            [12]  923 	clr	_P0_2
                           000131   924 	C$asgn2_3.c$149$2$17 ==.
                                    925 ;	asgn2_3.c:149: P0_3=0;
      0001AB C2 83            [12]  926 	clr	_P0_3
                           000133   927 	C$asgn2_3.c$150$2$17 ==.
                                    928 ;	asgn2_3.c:150: P0_4=0;
      0001AD C2 84            [12]  929 	clr	_P0_4
                           000135   930 	C$asgn2_3.c$151$2$17 ==.
                                    931 ;	asgn2_3.c:151: P0_5=0;
      0001AF C2 85            [12]  932 	clr	_P0_5
                           000137   933 	C$asgn2_3.c$152$2$17 ==.
                                    934 ;	asgn2_3.c:152: P0_6=0;
      0001B1 C2 86            [12]  935 	clr	_P0_6
      0001B3 80 56            [24]  936 	sjmp	00148$
      0001B5                        937 00113$:
                           00013B   938 	C$asgn2_3.c$154$1$5 ==.
                                    939 ;	asgn2_3.c:154: else if(x==12)//C
      0001B5 BE 0C 13         [24]  940 	cjne	r6,#0x0C,00110$
      0001B8 BF 00 10         [24]  941 	cjne	r7,#0x00,00110$
                           000141   942 	C$asgn2_3.c$156$2$18 ==.
                                    943 ;	asgn2_3.c:156: P0_0=0;
      0001BB C2 80            [12]  944 	clr	_P0_0
                           000143   945 	C$asgn2_3.c$157$2$18 ==.
                                    946 ;	asgn2_3.c:157: P0_1=1;
      0001BD D2 81            [12]  947 	setb	_P0_1
                           000145   948 	C$asgn2_3.c$158$2$18 ==.
                                    949 ;	asgn2_3.c:158: P0_2=1;
      0001BF D2 82            [12]  950 	setb	_P0_2
                           000147   951 	C$asgn2_3.c$159$2$18 ==.
                                    952 ;	asgn2_3.c:159: P0_3=0;
      0001C1 C2 83            [12]  953 	clr	_P0_3
                           000149   954 	C$asgn2_3.c$160$2$18 ==.
                                    955 ;	asgn2_3.c:160: P0_4=0;
      0001C3 C2 84            [12]  956 	clr	_P0_4
                           00014B   957 	C$asgn2_3.c$161$2$18 ==.
                                    958 ;	asgn2_3.c:161: P0_5=0;
      0001C5 C2 85            [12]  959 	clr	_P0_5
                           00014D   960 	C$asgn2_3.c$162$2$18 ==.
                                    961 ;	asgn2_3.c:162: P0_6=1;
      0001C7 D2 86            [12]  962 	setb	_P0_6
      0001C9 80 40            [24]  963 	sjmp	00148$
      0001CB                        964 00110$:
                           000151   965 	C$asgn2_3.c$164$1$5 ==.
                                    966 ;	asgn2_3.c:164: else if(x==13)//D
      0001CB BE 0D 13         [24]  967 	cjne	r6,#0x0D,00107$
      0001CE BF 00 10         [24]  968 	cjne	r7,#0x00,00107$
                           000157   969 	C$asgn2_3.c$166$2$19 ==.
                                    970 ;	asgn2_3.c:166: P0_0=0;
      0001D1 C2 80            [12]  971 	clr	_P0_0
                           000159   972 	C$asgn2_3.c$167$2$19 ==.
                                    973 ;	asgn2_3.c:167: P0_1=0;
      0001D3 C2 81            [12]  974 	clr	_P0_1
                           00015B   975 	C$asgn2_3.c$168$2$19 ==.
                                    976 ;	asgn2_3.c:168: P0_2=0;
      0001D5 C2 82            [12]  977 	clr	_P0_2
                           00015D   978 	C$asgn2_3.c$169$2$19 ==.
                                    979 ;	asgn2_3.c:169: P0_3=0;
      0001D7 C2 83            [12]  980 	clr	_P0_3
                           00015F   981 	C$asgn2_3.c$170$2$19 ==.
                                    982 ;	asgn2_3.c:170: P0_4=0;
      0001D9 C2 84            [12]  983 	clr	_P0_4
                           000161   984 	C$asgn2_3.c$171$2$19 ==.
                                    985 ;	asgn2_3.c:171: P0_5=0;
      0001DB C2 85            [12]  986 	clr	_P0_5
                           000163   987 	C$asgn2_3.c$172$2$19 ==.
                                    988 ;	asgn2_3.c:172: P0_6=1;
      0001DD D2 86            [12]  989 	setb	_P0_6
      0001DF 80 2A            [24]  990 	sjmp	00148$
      0001E1                        991 00107$:
                           000167   992 	C$asgn2_3.c$174$1$5 ==.
                                    993 ;	asgn2_3.c:174: else if(x==14)//E
      0001E1 BE 0E 13         [24]  994 	cjne	r6,#0x0E,00104$
      0001E4 BF 00 10         [24]  995 	cjne	r7,#0x00,00104$
                           00016D   996 	C$asgn2_3.c$176$2$20 ==.
                                    997 ;	asgn2_3.c:176: P0_0=0;
      0001E7 C2 80            [12]  998 	clr	_P0_0
                           00016F   999 	C$asgn2_3.c$177$2$20 ==.
                                   1000 ;	asgn2_3.c:177: P0_1=1;
      0001E9 D2 81            [12] 1001 	setb	_P0_1
                           000171  1002 	C$asgn2_3.c$178$2$20 ==.
                                   1003 ;	asgn2_3.c:178: P0_2=1;
      0001EB D2 82            [12] 1004 	setb	_P0_2
                           000173  1005 	C$asgn2_3.c$179$2$20 ==.
                                   1006 ;	asgn2_3.c:179: P0_3=0;
      0001ED C2 83            [12] 1007 	clr	_P0_3
                           000175  1008 	C$asgn2_3.c$180$2$20 ==.
                                   1009 ;	asgn2_3.c:180: P0_4=0;
      0001EF C2 84            [12] 1010 	clr	_P0_4
                           000177  1011 	C$asgn2_3.c$181$2$20 ==.
                                   1012 ;	asgn2_3.c:181: P0_5=0;
      0001F1 C2 85            [12] 1013 	clr	_P0_5
                           000179  1014 	C$asgn2_3.c$182$2$20 ==.
                                   1015 ;	asgn2_3.c:182: P0_6=0;
      0001F3 C2 86            [12] 1016 	clr	_P0_6
      0001F5 80 14            [24] 1017 	sjmp	00148$
      0001F7                       1018 00104$:
                           00017D  1019 	C$asgn2_3.c$184$1$5 ==.
                                   1020 ;	asgn2_3.c:184: else if(x==15)//F
      0001F7 BE 0F 11         [24] 1021 	cjne	r6,#0x0F,00148$
      0001FA BF 00 0E         [24] 1022 	cjne	r7,#0x00,00148$
                           000183  1023 	C$asgn2_3.c$186$2$21 ==.
                                   1024 ;	asgn2_3.c:186: P0_0=0;
      0001FD C2 80            [12] 1025 	clr	_P0_0
                           000185  1026 	C$asgn2_3.c$187$2$21 ==.
                                   1027 ;	asgn2_3.c:187: P0_1=1;
      0001FF D2 81            [12] 1028 	setb	_P0_1
                           000187  1029 	C$asgn2_3.c$188$2$21 ==.
                                   1030 ;	asgn2_3.c:188: P0_2=1;
      000201 D2 82            [12] 1031 	setb	_P0_2
                           000189  1032 	C$asgn2_3.c$189$2$21 ==.
                                   1033 ;	asgn2_3.c:189: P0_3=1;
      000203 D2 83            [12] 1034 	setb	_P0_3
                           00018B  1035 	C$asgn2_3.c$190$2$21 ==.
                                   1036 ;	asgn2_3.c:190: P0_4=0;
      000205 C2 84            [12] 1037 	clr	_P0_4
                           00018D  1038 	C$asgn2_3.c$191$2$21 ==.
                                   1039 ;	asgn2_3.c:191: P0_5=0;
      000207 C2 85            [12] 1040 	clr	_P0_5
                           00018F  1041 	C$asgn2_3.c$192$2$21 ==.
                                   1042 ;	asgn2_3.c:192: P0_6=0;
      000209 C2 86            [12] 1043 	clr	_P0_6
      00020B                       1044 00148$:
                           000191  1045 	C$asgn2_3.c$194$1$5 ==.
                           000191  1046 	XG$setSegment$0$0 ==.
      00020B 22               [24] 1047 	ret
                                   1048 ;------------------------------------------------------------
                                   1049 ;Allocation info for local variables in function 'display'
                                   1050 ;------------------------------------------------------------
                           000192  1051 	G$display$0$0 ==.
                           000192  1052 	C$asgn2_3.c$197$1$5 ==.
                                   1053 ;	asgn2_3.c:197: void display(void){
                                   1054 ;	-----------------------------------------
                                   1055 ;	 function display
                                   1056 ;	-----------------------------------------
      00020C                       1057 _display:
                           000192  1058 	C$asgn2_3.c$199$1$23 ==.
                                   1059 ;	asgn2_3.c:199: P3_3=0;
      00020C C2 B3            [12] 1060 	clr	_P3_3
                           000194  1061 	C$asgn2_3.c$200$1$23 ==.
                                   1062 ;	asgn2_3.c:200: P3_2=1;
      00020E D2 B2            [12] 1063 	setb	_P3_2
                           000196  1064 	C$asgn2_3.c$201$1$23 ==.
                                   1065 ;	asgn2_3.c:201: P3_1=1;
      000210 D2 B1            [12] 1066 	setb	_P3_1
                           000198  1067 	C$asgn2_3.c$202$1$23 ==.
                                   1068 ;	asgn2_3.c:202: P3_0=1;
      000212 D2 B0            [12] 1069 	setb	_P3_0
                           00019A  1070 	C$asgn2_3.c$203$1$23 ==.
                                   1071 ;	asgn2_3.c:203: setSegment(first);
      000214 85 08 82         [24] 1072 	mov	dpl,_first
      000217 85 09 83         [24] 1073 	mov	dph,(_first + 1)
      00021A 12 00 A0         [24] 1074 	lcall	_setSegment
                           0001A3  1075 	C$asgn2_3.c$204$1$23 ==.
                                   1076 ;	asgn2_3.c:204: t0Delay();
      00021D 12 00 7A         [24] 1077 	lcall	_t0Delay
                           0001A6  1078 	C$asgn2_3.c$205$1$23 ==.
                                   1079 ;	asgn2_3.c:205: P3_3=1;
      000220 D2 B3            [12] 1080 	setb	_P3_3
                           0001A8  1081 	C$asgn2_3.c$206$1$23 ==.
                                   1082 ;	asgn2_3.c:206: P3_2=0;
      000222 C2 B2            [12] 1083 	clr	_P3_2
                           0001AA  1084 	C$asgn2_3.c$207$1$23 ==.
                                   1085 ;	asgn2_3.c:207: P3_1=1;
      000224 D2 B1            [12] 1086 	setb	_P3_1
                           0001AC  1087 	C$asgn2_3.c$208$1$23 ==.
                                   1088 ;	asgn2_3.c:208: P3_0=1;
      000226 D2 B0            [12] 1089 	setb	_P3_0
                           0001AE  1090 	C$asgn2_3.c$209$1$23 ==.
                                   1091 ;	asgn2_3.c:209: setSegment(second);
      000228 85 0A 82         [24] 1092 	mov	dpl,_second
      00022B 85 0B 83         [24] 1093 	mov	dph,(_second + 1)
      00022E 12 00 A0         [24] 1094 	lcall	_setSegment
                           0001B7  1095 	C$asgn2_3.c$210$1$23 ==.
                                   1096 ;	asgn2_3.c:210: t0Delay();
      000231 12 00 7A         [24] 1097 	lcall	_t0Delay
                           0001BA  1098 	C$asgn2_3.c$211$1$23 ==.
                                   1099 ;	asgn2_3.c:211: P3_3=1;
      000234 D2 B3            [12] 1100 	setb	_P3_3
                           0001BC  1101 	C$asgn2_3.c$212$1$23 ==.
                                   1102 ;	asgn2_3.c:212: P3_2=1;
      000236 D2 B2            [12] 1103 	setb	_P3_2
                           0001BE  1104 	C$asgn2_3.c$213$1$23 ==.
                                   1105 ;	asgn2_3.c:213: P3_1=0;
      000238 C2 B1            [12] 1106 	clr	_P3_1
                           0001C0  1107 	C$asgn2_3.c$214$1$23 ==.
                                   1108 ;	asgn2_3.c:214: P3_0=1;
      00023A D2 B0            [12] 1109 	setb	_P3_0
                           0001C2  1110 	C$asgn2_3.c$215$1$23 ==.
                                   1111 ;	asgn2_3.c:215: setSegment(third);
      00023C 85 0C 82         [24] 1112 	mov	dpl,_third
      00023F 85 0D 83         [24] 1113 	mov	dph,(_third + 1)
      000242 12 00 A0         [24] 1114 	lcall	_setSegment
                           0001CB  1115 	C$asgn2_3.c$216$1$23 ==.
                                   1116 ;	asgn2_3.c:216: t0Delay();
      000245 12 00 7A         [24] 1117 	lcall	_t0Delay
                           0001CE  1118 	C$asgn2_3.c$217$1$23 ==.
                                   1119 ;	asgn2_3.c:217: P3_3=1;
      000248 D2 B3            [12] 1120 	setb	_P3_3
                           0001D0  1121 	C$asgn2_3.c$218$1$23 ==.
                                   1122 ;	asgn2_3.c:218: P3_2=1;
      00024A D2 B2            [12] 1123 	setb	_P3_2
                           0001D2  1124 	C$asgn2_3.c$219$1$23 ==.
                                   1125 ;	asgn2_3.c:219: P3_1=1;
      00024C D2 B1            [12] 1126 	setb	_P3_1
                           0001D4  1127 	C$asgn2_3.c$220$1$23 ==.
                                   1128 ;	asgn2_3.c:220: P3_0=0;
      00024E C2 B0            [12] 1129 	clr	_P3_0
                           0001D6  1130 	C$asgn2_3.c$221$1$23 ==.
                                   1131 ;	asgn2_3.c:221: setSegment(fourth);
      000250 85 0E 82         [24] 1132 	mov	dpl,_fourth
      000253 85 0F 83         [24] 1133 	mov	dph,(_fourth + 1)
      000256 12 00 A0         [24] 1134 	lcall	_setSegment
                           0001DF  1135 	C$asgn2_3.c$222$1$23 ==.
                                   1136 ;	asgn2_3.c:222: t0Delay();
      000259 12 00 7A         [24] 1137 	lcall	_t0Delay
                           0001E2  1138 	C$asgn2_3.c$223$1$23 ==.
                           0001E2  1139 	XG$display$0$0 ==.
      00025C 22               [24] 1140 	ret
                                   1141 ;------------------------------------------------------------
                                   1142 ;Allocation info for local variables in function 'updateDisplay'
                                   1143 ;------------------------------------------------------------
                                   1144 ;input                     Allocated to registers r6 r7 
                                   1145 ;------------------------------------------------------------
                           0001E3  1146 	G$updateDisplay$0$0 ==.
                           0001E3  1147 	C$asgn2_3.c$239$1$23 ==.
                                   1148 ;	asgn2_3.c:239: void updateDisplay(int input)  
                                   1149 ;	-----------------------------------------
                                   1150 ;	 function updateDisplay
                                   1151 ;	-----------------------------------------
      00025D                       1152 _updateDisplay:
      00025D AE 82            [24] 1153 	mov	r6,dpl
      00025F AF 83            [24] 1154 	mov	r7,dph
                           0001E7  1155 	C$asgn2_3.c$241$1$25 ==.
                                   1156 ;	asgn2_3.c:241: first=second;
      000261 85 0A 08         [24] 1157 	mov	_first,_second
      000264 85 0B 09         [24] 1158 	mov	(_first + 1),(_second + 1)
                           0001ED  1159 	C$asgn2_3.c$242$1$25 ==.
                                   1160 ;	asgn2_3.c:242: second=third;
      000267 85 0C 0A         [24] 1161 	mov	_second,_third
      00026A 85 0D 0B         [24] 1162 	mov	(_second + 1),(_third + 1)
                           0001F3  1163 	C$asgn2_3.c$243$1$25 ==.
                                   1164 ;	asgn2_3.c:243: third=fourth;
      00026D 85 0E 0C         [24] 1165 	mov	_third,_fourth
      000270 85 0F 0D         [24] 1166 	mov	(_third + 1),(_fourth + 1)
                           0001F9  1167 	C$asgn2_3.c$244$1$25 ==.
                                   1168 ;	asgn2_3.c:244: fourth=input;
      000273 8E 0E            [24] 1169 	mov	_fourth,r6
      000275 8F 0F            [24] 1170 	mov	(_fourth + 1),r7
                           0001FD  1171 	C$asgn2_3.c$245$1$25 ==.
                           0001FD  1172 	XG$updateDisplay$0$0 ==.
      000277 22               [24] 1173 	ret
                                   1174 ;------------------------------------------------------------
                                   1175 ;Allocation info for local variables in function 'findButtonPress'
                                   1176 ;------------------------------------------------------------
                           0001FE  1177 	G$findButtonPress$0$0 ==.
                           0001FE  1178 	C$asgn2_3.c$247$1$25 ==.
                                   1179 ;	asgn2_3.c:247: void findButtonPress(void)
                                   1180 ;	-----------------------------------------
                                   1181 ;	 function findButtonPress
                                   1182 ;	-----------------------------------------
      000278                       1183 _findButtonPress:
                           0001FE  1184 	C$asgn2_3.c$250$1$27 ==.
                                   1185 ;	asgn2_3.c:250: P1_0 = 0;
      000278 C2 90            [12] 1186 	clr	_P1_0
                           000200  1187 	C$asgn2_3.c$251$1$27 ==.
                                   1188 ;	asgn2_3.c:251: if(P1_4 == 0)
      00027A 20 94 0C         [24] 1189 	jb	_P1_4,00105$
                           000203  1190 	C$asgn2_3.c$253$2$28 ==.
                                   1191 ;	asgn2_3.c:253: updateDisplay(0);
      00027D 90 00 00         [24] 1192 	mov	dptr,#0x0000
      000280 12 02 5D         [24] 1193 	lcall	_updateDisplay
                           000209  1194 	C$asgn2_3.c$254$2$28 ==.
                                   1195 ;	asgn2_3.c:254: t0Delay56ms();
      000283 12 00 8D         [24] 1196 	lcall	_t0Delay56ms
                           00020C  1197 	C$asgn2_3.c$255$2$28 ==.
                                   1198 ;	asgn2_3.c:255: while(P1_4==0);
      000286                       1199 00101$:
      000286 30 94 FD         [24] 1200 	jnb	_P1_4,00101$
      000289                       1201 00105$:
                           00020F  1202 	C$asgn2_3.c$257$1$27 ==.
                                   1203 ;	asgn2_3.c:257: if(P1_5 == 0)
      000289 20 95 0C         [24] 1204 	jb	_P1_5,00110$
                           000212  1205 	C$asgn2_3.c$259$2$29 ==.
                                   1206 ;	asgn2_3.c:259: updateDisplay(1);
      00028C 90 00 01         [24] 1207 	mov	dptr,#0x0001
      00028F 12 02 5D         [24] 1208 	lcall	_updateDisplay
                           000218  1209 	C$asgn2_3.c$260$2$29 ==.
                                   1210 ;	asgn2_3.c:260: t0Delay56ms();
      000292 12 00 8D         [24] 1211 	lcall	_t0Delay56ms
                           00021B  1212 	C$asgn2_3.c$261$2$29 ==.
                                   1213 ;	asgn2_3.c:261: while(P1_5==0);
      000295                       1214 00106$:
      000295 30 95 FD         [24] 1215 	jnb	_P1_5,00106$
      000298                       1216 00110$:
                           00021E  1217 	C$asgn2_3.c$263$1$27 ==.
                                   1218 ;	asgn2_3.c:263: if(P1_6 == 0)
      000298 20 96 0C         [24] 1219 	jb	_P1_6,00115$
                           000221  1220 	C$asgn2_3.c$265$2$30 ==.
                                   1221 ;	asgn2_3.c:265: updateDisplay(2);
      00029B 90 00 02         [24] 1222 	mov	dptr,#0x0002
      00029E 12 02 5D         [24] 1223 	lcall	_updateDisplay
                           000227  1224 	C$asgn2_3.c$266$2$30 ==.
                                   1225 ;	asgn2_3.c:266: t0Delay56ms();
      0002A1 12 00 8D         [24] 1226 	lcall	_t0Delay56ms
                           00022A  1227 	C$asgn2_3.c$267$2$30 ==.
                                   1228 ;	asgn2_3.c:267: while(P1_6==0);
      0002A4                       1229 00111$:
      0002A4 30 96 FD         [24] 1230 	jnb	_P1_6,00111$
      0002A7                       1231 00115$:
                           00022D  1232 	C$asgn2_3.c$269$1$27 ==.
                                   1233 ;	asgn2_3.c:269: if(P1_7 == 0)
      0002A7 20 97 0C         [24] 1234 	jb	_P1_7,00120$
                           000230  1235 	C$asgn2_3.c$271$2$31 ==.
                                   1236 ;	asgn2_3.c:271: updateDisplay(3);
      0002AA 90 00 03         [24] 1237 	mov	dptr,#0x0003
      0002AD 12 02 5D         [24] 1238 	lcall	_updateDisplay
                           000236  1239 	C$asgn2_3.c$272$2$31 ==.
                                   1240 ;	asgn2_3.c:272: t0Delay56ms();
      0002B0 12 00 8D         [24] 1241 	lcall	_t0Delay56ms
                           000239  1242 	C$asgn2_3.c$273$2$31 ==.
                                   1243 ;	asgn2_3.c:273: while(P1_7==0);
      0002B3                       1244 00116$:
      0002B3 30 97 FD         [24] 1245 	jnb	_P1_7,00116$
      0002B6                       1246 00120$:
                           00023C  1247 	C$asgn2_3.c$276$1$27 ==.
                                   1248 ;	asgn2_3.c:276: P1_0 = 1;
      0002B6 D2 90            [12] 1249 	setb	_P1_0
                           00023E  1250 	C$asgn2_3.c$277$1$27 ==.
                                   1251 ;	asgn2_3.c:277: P1_1 = 0;
      0002B8 C2 91            [12] 1252 	clr	_P1_1
                           000240  1253 	C$asgn2_3.c$279$1$27 ==.
                                   1254 ;	asgn2_3.c:279: if(P1_4 == 0)
      0002BA 20 94 0C         [24] 1255 	jb	_P1_4,00125$
                           000243  1256 	C$asgn2_3.c$281$2$32 ==.
                                   1257 ;	asgn2_3.c:281: updateDisplay(4);
      0002BD 90 00 04         [24] 1258 	mov	dptr,#0x0004
      0002C0 12 02 5D         [24] 1259 	lcall	_updateDisplay
                           000249  1260 	C$asgn2_3.c$282$2$32 ==.
                                   1261 ;	asgn2_3.c:282: t0Delay56ms();
      0002C3 12 00 8D         [24] 1262 	lcall	_t0Delay56ms
                           00024C  1263 	C$asgn2_3.c$283$2$32 ==.
                                   1264 ;	asgn2_3.c:283: while(P1_4==0);
      0002C6                       1265 00121$:
      0002C6 30 94 FD         [24] 1266 	jnb	_P1_4,00121$
      0002C9                       1267 00125$:
                           00024F  1268 	C$asgn2_3.c$285$1$27 ==.
                                   1269 ;	asgn2_3.c:285: if(P1_5 == 0)
      0002C9 20 95 0C         [24] 1270 	jb	_P1_5,00130$
                           000252  1271 	C$asgn2_3.c$287$2$33 ==.
                                   1272 ;	asgn2_3.c:287: updateDisplay(5);
      0002CC 90 00 05         [24] 1273 	mov	dptr,#0x0005
      0002CF 12 02 5D         [24] 1274 	lcall	_updateDisplay
                           000258  1275 	C$asgn2_3.c$288$2$33 ==.
                                   1276 ;	asgn2_3.c:288: t0Delay56ms();
      0002D2 12 00 8D         [24] 1277 	lcall	_t0Delay56ms
                           00025B  1278 	C$asgn2_3.c$289$2$33 ==.
                                   1279 ;	asgn2_3.c:289: while(P1_5==0);
      0002D5                       1280 00126$:
      0002D5 30 95 FD         [24] 1281 	jnb	_P1_5,00126$
      0002D8                       1282 00130$:
                           00025E  1283 	C$asgn2_3.c$291$1$27 ==.
                                   1284 ;	asgn2_3.c:291: if(P1_6 == 0)
      0002D8 20 96 0C         [24] 1285 	jb	_P1_6,00135$
                           000261  1286 	C$asgn2_3.c$293$2$34 ==.
                                   1287 ;	asgn2_3.c:293: updateDisplay(6);
      0002DB 90 00 06         [24] 1288 	mov	dptr,#0x0006
      0002DE 12 02 5D         [24] 1289 	lcall	_updateDisplay
                           000267  1290 	C$asgn2_3.c$294$2$34 ==.
                                   1291 ;	asgn2_3.c:294: t0Delay56ms();
      0002E1 12 00 8D         [24] 1292 	lcall	_t0Delay56ms
                           00026A  1293 	C$asgn2_3.c$295$2$34 ==.
                                   1294 ;	asgn2_3.c:295: while(P1_6==0);
      0002E4                       1295 00131$:
      0002E4 30 96 FD         [24] 1296 	jnb	_P1_6,00131$
      0002E7                       1297 00135$:
                           00026D  1298 	C$asgn2_3.c$297$1$27 ==.
                                   1299 ;	asgn2_3.c:297: if(P1_7 == 0)
      0002E7 20 97 0C         [24] 1300 	jb	_P1_7,00140$
                           000270  1301 	C$asgn2_3.c$299$2$35 ==.
                                   1302 ;	asgn2_3.c:299: updateDisplay(7);
      0002EA 90 00 07         [24] 1303 	mov	dptr,#0x0007
      0002ED 12 02 5D         [24] 1304 	lcall	_updateDisplay
                           000276  1305 	C$asgn2_3.c$300$2$35 ==.
                                   1306 ;	asgn2_3.c:300: t0Delay56ms();
      0002F0 12 00 8D         [24] 1307 	lcall	_t0Delay56ms
                           000279  1308 	C$asgn2_3.c$301$2$35 ==.
                                   1309 ;	asgn2_3.c:301: while(P1_7==0);
      0002F3                       1310 00136$:
      0002F3 30 97 FD         [24] 1311 	jnb	_P1_7,00136$
      0002F6                       1312 00140$:
                           00027C  1313 	C$asgn2_3.c$304$1$27 ==.
                                   1314 ;	asgn2_3.c:304: P1_1 = 1;
      0002F6 D2 91            [12] 1315 	setb	_P1_1
                           00027E  1316 	C$asgn2_3.c$305$1$27 ==.
                                   1317 ;	asgn2_3.c:305: P1_2 = 0;
      0002F8 C2 92            [12] 1318 	clr	_P1_2
                           000280  1319 	C$asgn2_3.c$307$1$27 ==.
                                   1320 ;	asgn2_3.c:307: if(P1_4 == 0)
      0002FA 20 94 0C         [24] 1321 	jb	_P1_4,00145$
                           000283  1322 	C$asgn2_3.c$309$2$36 ==.
                                   1323 ;	asgn2_3.c:309: updateDisplay(8);
      0002FD 90 00 08         [24] 1324 	mov	dptr,#0x0008
      000300 12 02 5D         [24] 1325 	lcall	_updateDisplay
                           000289  1326 	C$asgn2_3.c$310$2$36 ==.
                                   1327 ;	asgn2_3.c:310: t0Delay56ms();
      000303 12 00 8D         [24] 1328 	lcall	_t0Delay56ms
                           00028C  1329 	C$asgn2_3.c$311$2$36 ==.
                                   1330 ;	asgn2_3.c:311: while(P1_4==0);
      000306                       1331 00141$:
      000306 30 94 FD         [24] 1332 	jnb	_P1_4,00141$
      000309                       1333 00145$:
                           00028F  1334 	C$asgn2_3.c$313$1$27 ==.
                                   1335 ;	asgn2_3.c:313: if(P1_5 == 0)
      000309 20 95 0C         [24] 1336 	jb	_P1_5,00150$
                           000292  1337 	C$asgn2_3.c$315$2$37 ==.
                                   1338 ;	asgn2_3.c:315: updateDisplay(9);
      00030C 90 00 09         [24] 1339 	mov	dptr,#0x0009
      00030F 12 02 5D         [24] 1340 	lcall	_updateDisplay
                           000298  1341 	C$asgn2_3.c$316$2$37 ==.
                                   1342 ;	asgn2_3.c:316: t0Delay56ms();
      000312 12 00 8D         [24] 1343 	lcall	_t0Delay56ms
                           00029B  1344 	C$asgn2_3.c$317$2$37 ==.
                                   1345 ;	asgn2_3.c:317: while(P1_5==0);
      000315                       1346 00146$:
      000315 30 95 FD         [24] 1347 	jnb	_P1_5,00146$
      000318                       1348 00150$:
                           00029E  1349 	C$asgn2_3.c$319$1$27 ==.
                                   1350 ;	asgn2_3.c:319: if(P1_6 == 0)
      000318 20 96 0C         [24] 1351 	jb	_P1_6,00155$
                           0002A1  1352 	C$asgn2_3.c$321$2$38 ==.
                                   1353 ;	asgn2_3.c:321: updateDisplay(10);
      00031B 90 00 0A         [24] 1354 	mov	dptr,#0x000A
      00031E 12 02 5D         [24] 1355 	lcall	_updateDisplay
                           0002A7  1356 	C$asgn2_3.c$322$2$38 ==.
                                   1357 ;	asgn2_3.c:322: t0Delay56ms();
      000321 12 00 8D         [24] 1358 	lcall	_t0Delay56ms
                           0002AA  1359 	C$asgn2_3.c$323$2$38 ==.
                                   1360 ;	asgn2_3.c:323: while(P1_6==0);
      000324                       1361 00151$:
      000324 30 96 FD         [24] 1362 	jnb	_P1_6,00151$
      000327                       1363 00155$:
                           0002AD  1364 	C$asgn2_3.c$325$1$27 ==.
                                   1365 ;	asgn2_3.c:325: if(P1_7 == 0)
      000327 20 97 0C         [24] 1366 	jb	_P1_7,00160$
                           0002B0  1367 	C$asgn2_3.c$327$2$39 ==.
                                   1368 ;	asgn2_3.c:327: updateDisplay(11);
      00032A 90 00 0B         [24] 1369 	mov	dptr,#0x000B
      00032D 12 02 5D         [24] 1370 	lcall	_updateDisplay
                           0002B6  1371 	C$asgn2_3.c$328$2$39 ==.
                                   1372 ;	asgn2_3.c:328: t0Delay56ms();
      000330 12 00 8D         [24] 1373 	lcall	_t0Delay56ms
                           0002B9  1374 	C$asgn2_3.c$329$2$39 ==.
                                   1375 ;	asgn2_3.c:329: while(P1_7==0);
      000333                       1376 00156$:
      000333 30 97 FD         [24] 1377 	jnb	_P1_7,00156$
      000336                       1378 00160$:
                           0002BC  1379 	C$asgn2_3.c$332$1$27 ==.
                                   1380 ;	asgn2_3.c:332: P1_2 = 1;
      000336 D2 92            [12] 1381 	setb	_P1_2
                           0002BE  1382 	C$asgn2_3.c$333$1$27 ==.
                                   1383 ;	asgn2_3.c:333: P1_3 = 0;
      000338 C2 93            [12] 1384 	clr	_P1_3
                           0002C0  1385 	C$asgn2_3.c$335$1$27 ==.
                                   1386 ;	asgn2_3.c:335: if(P1_4 == 0)
      00033A 20 94 0C         [24] 1387 	jb	_P1_4,00165$
                           0002C3  1388 	C$asgn2_3.c$337$2$40 ==.
                                   1389 ;	asgn2_3.c:337: updateDisplay(12);
      00033D 90 00 0C         [24] 1390 	mov	dptr,#0x000C
      000340 12 02 5D         [24] 1391 	lcall	_updateDisplay
                           0002C9  1392 	C$asgn2_3.c$338$2$40 ==.
                                   1393 ;	asgn2_3.c:338: t0Delay56ms();
      000343 12 00 8D         [24] 1394 	lcall	_t0Delay56ms
                           0002CC  1395 	C$asgn2_3.c$339$2$40 ==.
                                   1396 ;	asgn2_3.c:339: while(P1_4==0);
      000346                       1397 00161$:
      000346 30 94 FD         [24] 1398 	jnb	_P1_4,00161$
      000349                       1399 00165$:
                           0002CF  1400 	C$asgn2_3.c$341$1$27 ==.
                                   1401 ;	asgn2_3.c:341: if(P1_5 == 0)
      000349 20 95 0C         [24] 1402 	jb	_P1_5,00170$
                           0002D2  1403 	C$asgn2_3.c$343$2$41 ==.
                                   1404 ;	asgn2_3.c:343: updateDisplay(13);
      00034C 90 00 0D         [24] 1405 	mov	dptr,#0x000D
      00034F 12 02 5D         [24] 1406 	lcall	_updateDisplay
                           0002D8  1407 	C$asgn2_3.c$344$2$41 ==.
                                   1408 ;	asgn2_3.c:344: t0Delay56ms();
      000352 12 00 8D         [24] 1409 	lcall	_t0Delay56ms
                           0002DB  1410 	C$asgn2_3.c$345$2$41 ==.
                                   1411 ;	asgn2_3.c:345: while(P1_5==0);
      000355                       1412 00166$:
      000355 30 95 FD         [24] 1413 	jnb	_P1_5,00166$
      000358                       1414 00170$:
                           0002DE  1415 	C$asgn2_3.c$347$1$27 ==.
                                   1416 ;	asgn2_3.c:347: if(P1_6 == 0)
      000358 20 96 0C         [24] 1417 	jb	_P1_6,00175$
                           0002E1  1418 	C$asgn2_3.c$349$2$42 ==.
                                   1419 ;	asgn2_3.c:349: updateDisplay(14);
      00035B 90 00 0E         [24] 1420 	mov	dptr,#0x000E
      00035E 12 02 5D         [24] 1421 	lcall	_updateDisplay
                           0002E7  1422 	C$asgn2_3.c$350$2$42 ==.
                                   1423 ;	asgn2_3.c:350: t0Delay56ms();
      000361 12 00 8D         [24] 1424 	lcall	_t0Delay56ms
                           0002EA  1425 	C$asgn2_3.c$351$2$42 ==.
                                   1426 ;	asgn2_3.c:351: while(P1_6==0);
      000364                       1427 00171$:
      000364 30 96 FD         [24] 1428 	jnb	_P1_6,00171$
      000367                       1429 00175$:
                           0002ED  1430 	C$asgn2_3.c$353$1$27 ==.
                                   1431 ;	asgn2_3.c:353: if(P1_7 == 0)
      000367 20 97 0C         [24] 1432 	jb	_P1_7,00180$
                           0002F0  1433 	C$asgn2_3.c$355$2$43 ==.
                                   1434 ;	asgn2_3.c:355: updateDisplay(15);
      00036A 90 00 0F         [24] 1435 	mov	dptr,#0x000F
      00036D 12 02 5D         [24] 1436 	lcall	_updateDisplay
                           0002F6  1437 	C$asgn2_3.c$356$2$43 ==.
                                   1438 ;	asgn2_3.c:356: t0Delay56ms();
      000370 12 00 8D         [24] 1439 	lcall	_t0Delay56ms
                           0002F9  1440 	C$asgn2_3.c$357$2$43 ==.
                                   1441 ;	asgn2_3.c:357: while(P1_7==0);
      000373                       1442 00176$:
      000373 30 97 FD         [24] 1443 	jnb	_P1_7,00176$
      000376                       1444 00180$:
                           0002FC  1445 	C$asgn2_3.c$360$1$27 ==.
                                   1446 ;	asgn2_3.c:360: P1_3 = 1;							
      000376 D2 93            [12] 1447 	setb	_P1_3
                           0002FE  1448 	C$asgn2_3.c$361$1$27 ==.
                           0002FE  1449 	XG$findButtonPress$0$0 ==.
      000378 22               [24] 1450 	ret
                                   1451 ;------------------------------------------------------------
                                   1452 ;Allocation info for local variables in function 'main'
                                   1453 ;------------------------------------------------------------
                           0002FF  1454 	G$main$0$0 ==.
                           0002FF  1455 	C$asgn2_3.c$363$1$27 ==.
                                   1456 ;	asgn2_3.c:363: void main(void)
                                   1457 ;	-----------------------------------------
                                   1458 ;	 function main
                                   1459 ;	-----------------------------------------
      000379                       1460 _main:
                           0002FF  1461 	C$asgn2_3.c$365$1$45 ==.
                                   1462 ;	asgn2_3.c:365: first=1;
      000379 75 08 01         [24] 1463 	mov	_first,#0x01
      00037C 75 09 00         [24] 1464 	mov	(_first + 1),#0x00
                           000305  1465 	C$asgn2_3.c$366$1$45 ==.
                                   1466 ;	asgn2_3.c:366: second=2;
      00037F 75 0A 02         [24] 1467 	mov	_second,#0x02
      000382 75 0B 00         [24] 1468 	mov	(_second + 1),#0x00
                           00030B  1469 	C$asgn2_3.c$367$1$45 ==.
                                   1470 ;	asgn2_3.c:367: third=3;
      000385 75 0C 03         [24] 1471 	mov	_third,#0x03
      000388 75 0D 00         [24] 1472 	mov	(_third + 1),#0x00
                           000311  1473 	C$asgn2_3.c$368$1$45 ==.
                                   1474 ;	asgn2_3.c:368: fourth=4;
      00038B 75 0E 04         [24] 1475 	mov	_fourth,#0x04
      00038E 75 0F 00         [24] 1476 	mov	(_fourth + 1),#0x00
                           000317  1477 	C$asgn2_3.c$370$1$45 ==.
                                   1478 ;	asgn2_3.c:370: while(1)
      000391                       1479 00102$:
                           000317  1480 	C$asgn2_3.c$372$2$46 ==.
                                   1481 ;	asgn2_3.c:372: findButtonPress();
      000391 12 02 78         [24] 1482 	lcall	_findButtonPress
                           00031A  1483 	C$asgn2_3.c$373$2$46 ==.
                                   1484 ;	asgn2_3.c:373: display();
      000394 12 02 0C         [24] 1485 	lcall	_display
      000397 80 F8            [24] 1486 	sjmp	00102$
                           00031F  1487 	C$asgn2_3.c$375$1$45 ==.
                           00031F  1488 	XG$main$0$0 ==.
      000399 22               [24] 1489 	ret
                                   1490 	.area CSEG    (CODE)
                                   1491 	.area CONST   (CODE)
                                   1492 	.area XINIT   (CODE)
                                   1493 	.area CABS    (ABS,CODE)
